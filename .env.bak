# MINIMAL .env file for Airflow troubleshooting

AIRFLOW_UID=501
AIRFLOW_GID=0 # Or your host GID if you know it and it's not 0 (common for root group)

# === Airflow Core Settings ===
AIRFLOW__CORE__EXECUTOR=CeleryExecutor
AIRFLOW__CORE__LOAD_EXAMPLES=False
AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=True

# === Database Backend (ensure 'postgres' is the service name of your Airflow DB in docker-compose.yaml) ===
# Replace 'airflow_user_example' and 'airflow_pass_example' with the actual user/pass for your Airflow metadata DB
AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://airflow:airflow@postgres/airflow

# === Celery Broker (ensure 'redis' is the service name of your Redis in docker-compose.yaml) ===
AIRFLOW__CELERY__BROKER_URL=redis://:@redis:6379/0

# === Celery Result Backend (using the database) ===
AIRFLOW__CELERY__RESULT_BACKEND=db+postgresql://airflow:airflow@postgres/airflow

# === Commands for Docker Compose (VERY IMPORTANT - ensure these variable names match your docker-compose.yaml) ===
# These are typical names, verify them against your 'command: bash -c "${...}"' lines in docker-compose.yaml
# For example, if your compose file uses X_AIRFLOW_COMMAND_INIT_DB, then name it like that.
# The official docker-compose.yaml from Airflow project often uses these _COMMAND variables for the init service.
# For the actual services, it often defines the command directly or uses simpler AIRFLOW_COMMAND_XXX vars.
# You MUST check your docker-compose.yaml to confirm the exact variable names used in the 'command:' lines.

# Example if your init service uses these:
_AIRFLOW_DB_UPGRADE_COMMAND="airflow db upgrade"
_AIRFLOW_WWW_USER_CREATE_COMMAND="airflow users create --role Admin --username airflow --email admin@example.com --firstname Anonymous --lastname Admin --password airflow"

# Example if your services use these:
AIRFLOW__WEBSERVER__COMMAND="airflow webserver"
AIRFLOW__SCHEDULER__COMMAND="airflow scheduler"
AIRFLOW__WORKER__COMMAND="airflow celery worker"
AIRFLOW__FLOWER__COMMAND="airflow celery flower"
AIRFLOW__TRIGGERER__COMMAND="airflow triggerer"